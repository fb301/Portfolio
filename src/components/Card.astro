---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  imagePath: string;
  name: string;
  altText: string;
  id: string;
}

const { imagePath, name, altText, id } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.webp",
);

if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/*.{webp}"`,
  );
---

<article aria-label={name} transition:name={`/projects/${id}`}>
  <a href={`/projects/${id}`}>
    <div class='card'>
      <div class='container'>
        <Image src={images[imagePath]()} alt={altText} loading='eager' />
      </div>
      <div class='wrapper'>
        <p class='card-name'>{name}</p>
      </div>
    </div>
  </a>
</article>

<style>
  .card {
    cursor: pointer;
    display: grid;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    padding-bottom: 20px;
    border-radius: 2.5rem;
    --transform-speed: 333ms;
    transition: box-shadow calc(var(--transform-speed) * 0.5) ease-in-out;
  }

  @media screen and (max-width: 768px) {
    .card {
      width: calc(100% - 1rem);
    }
  }

  .card-name {
    text-align: center;
    align-self: flex-end;
    padding: 10px 0 10px 0;
    font-weight: 600;
    font-size: 24px;
  }

  .container {
    justify-content: center;
    padding: 20px;
    box-sizing: border-box;
  }

  .card::after {
    outline: 3px solid #00000000;
    box-shadow: 15px 15px 0px 0px rgba(0, 0, 0, 0);
    background-color: #29292900;
  }

  .card:hover {
    transform: scale(0.97);
    outline: 3px solid #000000;
    box-shadow: 15px 15px 0px 0px rgba(0, 0, 0, 1);
    background-color: #282828;
    transition: background-color calc(var(--transform-speed) * 0.5) ease-in;
  }

  .card:hover img {
    transform: scaleX(1.05);
  }

  img {
    border: 3px solid;
    border-radius: 2.5rem;
    display: block;
    object-fit: cover;
    width: 375px;
    height: 275px;
    max-width: 100%;
    background-color: #222;
    transition: transform calc(var(--transform-speed) * 0.5) ease-out;
  }
</style>
